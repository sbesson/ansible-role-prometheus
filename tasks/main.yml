---
# tasks file for prometheus

- name: prometheus | create directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
  - /etc/prometheus
  - /etc/prometheus/rules
  - /etc/prometheus/targets

- name: prometheus | prometheus configuration file
  become: yes
  template:
    dest: /etc/prometheus/prometheus.yml
    force: yes
    src: etc-prometheus-prometheus-yml.j2
  register: prometheus_configuration

- name: prometheus | prometheus alert rules
  become: yes
  template:
    dest: /etc/prometheus/rules/default-alert.rules.yml
    force: yes
    src: etc-prometheus-default-alert-rules-yml.j2
  register: prometheus_alert_rules

- name: prometheus | alertmanager configuration file
  become: yes
  template:
    dest: /etc/prometheus/alertmanager.yml
    force: yes
    src: etc-prometheus-alertmanager-yml.j2
  register: prometheus_alertmanager_configuration

- name: prometheus | blackbox configuration file
  become: yes
  copy:
    dest: /etc/prometheus/blackbox-exporter.yml
    force: yes
    src: etc-prometheus-blackbox-exporter.yml
  register: prometheus_blackboxexporter_configuration

- name: prometheus | file sd configs
  become: yes
  template:
    dest: /etc/prometheus/targets/{{ item.groupname }}.yml
    force: yes
    src: file_sd_config-template-yml.j2
  with_items:
    - "{{ prometheus_sd_targets }}"

# Docker containers

- name: prometheus | docker-python
  become: yes
  yum:
    name: docker-python
    state: present

- name: prometheus | docker alertmanager
  become: yes
  docker_container:
    command: >
      --config.file=/etc/prometheus/alertmanager.yml
      --storage.path=/alertmanager
    image: prom/alertmanager:v0.14.0
    name: alertmanager
    published_ports: "{{ (prometheus_alertmanger_port > 0) | ternary([(prometheus_alertmanger_port | string) + ':9093'], []) }}"
    #read_only: True
    recreate: "{{ prometheus_alertmanager_configuration.changed }}"
    restart_policy: always
    state: started
    volumes:
    - /etc/prometheus/alertmanager.yml:/etc/prometheus/alertmanager.yml:ro
    - alertmanager-data:/alertmanager

- name: prometheus | docker blackbox-exporter
  become: yes
  docker_container:
    command: "--config.file=/etc/prometheus/blackbox-exporter.yml"
    image: prom/blackbox-exporter:v0.12.0
    name: blackbox-exporter
    published_ports: "{{ (prometheus_blackboxexporter_port > 0) | ternary([(prometheus_blackboxexporter_port | string) + ':9115'], []) }}"
    #read_only: True
    recreate: "{{ prometheus_blackboxexporter_configuration.changed }}"
    restart_policy: always
    state: started
    volumes:
    - /etc/prometheus/blackbox-exporter.yml:/etc/prometheus/blackbox-exporter.yml:ro

- name: prometheus | docker prometheus
  become: yes
  docker_container:
    command: >
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    image: prom/prometheus:v2.2.1
    links:
    - alertmanager:alertmanager
    - blackbox-exporter:blackbox-exporter
    name: prometheus
    published_ports: "{{ (prometheus_port > 0) | ternary([(prometheus_port | string) + ':9090'], []) }}"
    #read_only: True
    recreate: "{{ prometheus_configuration.changed or prometheus_alert_rules.changed }}"
    restart_policy: always
    state: started
    volumes:
    # We could mount /etc/prometheus instead but the Docker image contains
    # additional (optional) files
    - /etc/prometheus/rules/:/etc/prometheus/rules/:ro
    - /etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - /etc/prometheus/targets/:/etc/prometheus/targets/:ro
    - prometheus-data:/prometheus

# In certain situations if a manual change means Prometheus in Docker
# auto restarted but a host mounted file wasn't present it'll be auto
# created as a directory instead of a file.
- name: prometheus | check docker host file mounts
  stat:
    path: "{{ item }}"
  with_items:
  - /etc/prometheus/alertmanager.yml
  - /etc/prometheus/blackbox-exporter.yml
  - /etc/prometheus/prometheus.yml
  register: prometheus_docker_file_mounts

- name: prometheus | assert docker host file mounts
  assert:
    that: 'item.stat.isreg'
  with_items: "{{ prometheus_docker_file_mounts.results }}"
  # This is a sanity check so use no_log to reduce the excessive log output
  # (there's nothing senstive in there)
  # The asserts will be in the same order as the previous task
  no_log: true
